{"version":3,"sources":["Components/Header/HeaderStyle.jsx","Components/Header/NavbarComponent.jsx","Components/Theme.jsx","Components/BodyComponent/BodyStyles.jsx","Common/fakeDataGenetator.js","Components/BodyComponent/Dashboard/WholeGraph.jsx","Common/GraphComponent.jsx","Common/Components.jsx","Components/BodyComponent/Dashboard/Dashboard.jsx","Components/Header/HearderComponent.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","navImg","width","height","borderRadius","color","backgroundColor","blue","wrapper","minHeight","background","boxSizing","padding","breakpoints","down","logo","lineHeight","toolbar","display","flexFlow","justifyContent","brandBox","dropdownlist","maxWidth","listItem","textTransform","navlink","blueGrey","transition","navButton","selectedNav","fontWeight","logoStyle","buttonStyle","margin","NavbarComponent","classes","AppBar","Toolbar","className","float","Box","style","component","src","Typography","variant","colors","baselight","baseDark","primary","primaryDark","wholePage","section","spacing","marginTop","pageLabel","paddingTop","pageHeader","paddingBottom","fontSize","textDecoration","responsiveImg","cardImage","maxHeight","overflowY","graphStyle","cardLabel","textAlign","cardHeader","dashboardCardsStyles","cardDetails","displayCard","position","displayCardGraph","bottom","left","ratio","top","progressbarContainer","alignItems","cardTitle","generalGraph","bigGraph","stagedColumn","footer","listStyle","flexDirection","fakeArrayGenrator","length","digit","array","index","element","Math","round","random","push","WholeGraph","useState","fetched","setFetched","GraphData","id","options","scales","x","title","text","dataSets","label","data","borderColor","red","fill","tension","green","yellow","xAxisLabels","type","pivotRadius","useEffect","map","item","i","ctx","document","getElementById","getContext","Chart","register","registerables","labels","datasets","grid","stacked","y","plugins","legend","render","fontColor","responsive","maintainAspectRatio","lineGraphComponent","Grid","container","xs","sm","md","Card","Paper","CardContent","align","Divider","varient","List","sx","bgcolor","aria-label","ListItem","disablePadding","ListItemButton","ListItemText","PageHeader","Dashboard","mt","Button","onClick","window","print","event","input","console","log","html2canvas","logging","letterRendering","scale","windowWidth","view","screen","availWidth","useCORS","then","canvas","imgData","toDataURL","imgHeight","heightLeft","doc","jsPDF","addImage","addPage","save","value","cardDataContent","gutterBottom","HearderComponent","exact","path","App","ReactDOM"],"mappings":"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","file":"static/js/main.ee527479.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\nimport { blue, blueGrey } from \"@material-ui/core/colors\";\n\nexport const useStyles = makeStyles((theme) => {\n  // console.log(theme.breakpoints);\n  return {\n    //common\n    navImg: {\n      width: \"35px\",\n      height: \"35px\",\n      borderRadius: \"50%\",\n      color: \"#EEF1FF\",\n      backgroundColor: blue[\"50\"],\n      // backgroundColor: '#B1B2FF !important'\n    },\n\n    //header\n    wrapper: {\n      width: \"100%\",\n      minHeight: \"100vh\",\n      height: \"auto\",\n      background: \"#efefef\",\n      boxSizing: \"border-box\",\n      padding: \"70px 24px 24px 270px\",\n      [theme.breakpoints.down(\"sm\")]: {\n        padding: \"70px 24px 24px 24px\",\n      },\n    },\n    logo: {\n      lineHeight: \"47px\",\n      color: \"inherit\",\n    },\n\n    // navbar styles\n\n    toolbar: {\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n      justifyContent: \"space-between\",\n      backgroundColor: '#AAC4FF !important'\n    },\n    brandBox: {\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n    },\n    dropdownlist: {\n      maxWidth: \"250px\",\n    },\n    listItem: {\n      textTransform: \"capitalize\",\n    },\n\n    navlink: {\n      color: blueGrey[700],\n      transition: \"0.8s\",\n      \"&:hover  div\": {\n        color: blue[\"A400\"],\n      },\n    },\n    navButton: { width: \"100%\", textTransform: \"capitalize\" },\n    selectedNav: {\n      color: `${blue[800]} !important`,\n      fontWeight: \" bolder\",\n      \" & div\": {\n        color: `${blue[800]} !important`,\n      },\n    },\n    logoStyle: {\n      width: 'auto',\n      height: '5px'\n    },\n    buttonStyle: {\n      margin: '5px',\n      padding: '5px'\n    }\n  };\n});\n","import React from \"react\";\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { useStyles } from \"./HeaderStyle\";\n\nexport default function NavbarComponent() {\n  const classes = useStyles();\n\n  return (\n    <AppBar>\n      <Toolbar className={classes.toolbar} float=\"right\">\n        <Box style={{ display: \"flex\"}}>\n          <Box\n            component=\"img\"\n            src=\"./logo.png\"\n            style={{ width: \"auto\", height: \"4rem\", margin: '0.313rem', padding: '0.313rem'}}\n          />\n          <Typography variant=\"h6\" className={classes.logo}>\n            Welcome, Admin\n          </Typography>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { blue, blueGrey } from \"@material-ui/core/colors\";\n\nexport const colors = {\n  baselight: blueGrey[400],\n  baseDark: blueGrey[800],\n  primary: blue[\"A200\"],\n  primaryDark: blue[\"A700\"],\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport { colors } from \"../Theme\";\n\nexport const useStyles = makeStyles((theme) => ({\n  //! Whole Page Style\n  wholePage: {\n    backgroundColor: '#B1B2FF'\n  },\n\n  //! Card Section Style\n  section: {\n    margin: theme.spacing(1, 0),\n    marginTop: \"10px\",\n    padding: \"10px\",\n  },\n  pageLabel: {\n    paddingTop: \"40px !important\",\n    color: colors.baselight,\n    textTransform: \"uppercase\",\n  },\n  pageHeader: {\n    padding: \"40px !important\",\n    paddingBottom: \"10px\",\n    color: colors.baseDark,\n    textTransform: \"capitalize\",\n    fontSize: \"37px\",\n    fontWeight: \"600\",\n    textDecoration: `underline`,\n  },\n  responsiveImg: {\n    width: \"100%\",\n    height: \"auto\",\n  },\n  cardImage: {\n    maxHeight: \"150px !important\",\n    overflowY: \"hidden\",\n  },\n\n  //! Graph\n  graphStyle: {\n    borderRadius: \"25px !important\",\n  },\n\n  //! Master Graph Style\n  // masterCard: {\n  //   height: 'auto',\n  //   width: '31.25rem !important',\n  // },\n\n  //! dashboard\n  cardLabel: {\n    color: colors.baseDark,\n    margin: theme.spacing(2, 0),\n    textTransform: \"uppercase\",\n    textAlign: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"0.8rem\",\n      margin: theme.spacing(1, 0),\n    },\n    textDecoration: \"underline\",\n    fontSize: `1.5rem`,\n  },\n  cardHeader: {\n    color: colors.baseDark,\n    margin: theme.spacing(2, 0),\n    textTransform: \"capitalize\",\n    textAlign: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"1.8rem\",\n      margin: theme.spacing(1, 0),\n    },\n  },\n\n  dashboardCardsStyles: {\n    borderRadius: \"2rem\",\n  },\n  cardDetails: {\n    color: colors.baselight\n  },\n\n  displayCard: {\n    position: \"relative\",\n    padding: \"0px !important\",\n    minHeight: \"140px\",\n    height: \"auto\",\n  },\n  displayCardGraph: {\n    width: \"100%\",\n    height: \"60px !important\",\n    position: \"absolute\",\n    bottom: \"0px\",\n    left: \"0px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"45px !important\",\n    },\n  },\n  ratio: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"33%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      top: \"45%\",\n      left: \"25%\",\n    },\n  },\n  progressbarContainer: {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"250px\",\n  },\n\n  //!userOverview section\n  cardTitle: {\n    color: colors.baseDark,\n  },\n  generalGraph: {\n    width: \"100%\",\n    height: \"300px\",\n  },\n  bigGraph: {\n    width: \"100%\",\n    height: \"500px\"\n  },\n  stagedColumn: {\n    width: \"100%\",\n    height: \"300px\",\n  },\n\n  //!footer\n  footer: {\n    padding: \"8px 24px 16px 270px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"8px 24px 16px 24px\",\n    },\n  },\n  //! List Style\n  listStyle: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '500px',\n  },\n\n  //! Dashboard Button sytle\n  buttonStyle: {\n    margin: '5px',\n    padding: '5px'\n  }\n}));\n","export const fakeArrayGenrator = ({ length, digit }) => {\n  const array = [];\n  for (let index = 0; index < length; index++) {\n    const element = Math.round(Math.random() * digit);\n    array.push(element);\n  }\n  return array;\n};\n","import {\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\n//TODO import ListItemText from '@mui/material/ListItemText';\n//TODO import ListItemIcon from '@mui/material/ListItemIcon';\n//TODO import StarIcon from '@mui/icons-material/Star';\n//TODO import ListItemButton from '@mui/material/ListItemButton';\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\nimport React, { useEffect, useState } from \"react\";\nimport { fakeArrayGenrator } from \"../../../Common/fakeDataGenetator\";\nimport { lineGraphComponent } from \"../../../Common/GraphComponent\";\nimport { useStyles } from \"../BodyStyles\";\n\nexport default function WholeGraph() {\n  const classes = useStyles();\n  const [fetched, setFetched] = useState(false);\n\n  const GraphData = [\n    //! This is DPV Garph\n    {\n      id: \"userOverViewGraph\",\n      options: {\n        scales: { x: { title: { display: true, text: \"seconds\" } } },\n      },\n      dataSets: [\n        {\n          label: \"Surface\",\n          data: fakeArrayGenrator({ length: 30, digit: 100 }),\n          borderColor: red[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Body Fitting\",\n          data: fakeArrayGenrator({ length: 30, digit: 100 }),\n          borderColor: green[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Missing & Wrong Part\",\n          data: fakeArrayGenrator({ length: 30, digit: 100 }),\n          // indexLable:{} ,\n          borderColor: yellow[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Welding\",\n          data: fakeArrayGenrator({ length: 30, digit: 100 }),\n          borderColor: blue[200],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Water Leaks\",\n          data: fakeArrayGenrator({ length: 30, digit: 100 }),\n          borderColor: green[200],\n          fill: true,\n          tension: 0.5,\n        },\n      ],\n      xAxisLabels: [\"UB\", \"MB\", \"SB SA\", \"SB ML\", \"SM\"],\n    },\n    //! This is DPV by Category Report\n    {\n      id: \"deviceOverViewGraph\",\n      type: \"doughnut\",\n      dataSets: [\n        {\n          label: \"DeskTop\",\n          data: fakeArrayGenrator({ length: 5, digit: 100 }),\n          backgroundColor: [\n            blue[\"A200\"],\n            blue[400],\n            blue[200],\n            red[200],\n            green[400],\n            yellow[300],\n          ],\n          fill: true,\n          tension: 0.5,\n        },\n      ],\n      xAxisLabels: [\n        \"Surface\",\n        \"Body Fitting\",\n        \"Missing & Wrong Part\",\n        \"Welding\",\n        \"Water Leak\",\n      ],\n    },\n\n    //! Master Report the totoal of 10 graphs\n    //TODO Under Body\n    {\n      id: \"underBodyCDPV\",\n      type: \"bar\",\n      options: {\n        scales: { x: { title: { display: true, text: \"seconds\" } } },\n      },\n      dataSets: [\n        {\n          label: \"Surface\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: red[500],\n          backgroundColor: red[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Body Fitting\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[500],\n          backgroundColor: green[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Missing & Wrong Parts\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          // indexLable:{} ,\n          borderColor: yellow[500],\n          backgroundColor: yellow[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Welding\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: blue[200],\n          backgroundColor: blue[200],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Water Leaks\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[200],\n          backgroundColor: green[200],\n          fill: true,\n          tension: 0.5,\n        },\n      ],\n      xAxisLabels: [\n        \"Surface\",\n        \"Body Fitting\",\n        \"Missing & Wrong Parts\",\n        \"Welding\",\n        \"Water Leaks\",\n      ],\n    },\n    {\n      id: \"underBodySurface\",\n      type: \"bar\",\n      options: {\n        scales: { x: { title: { display: true, text: \"Category DPV\" } } },\n      },\n      dataSets: [\n        {\n          label: \"Surface\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: red[500],\n          backgroundColor: red[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Body Fitting\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[500],\n          backgroundColor: green[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Missing & Wrong Parts\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          // indexLable:{} ,\n          borderColor: yellow[500],\n          backgroundColor: yellow[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Welding\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: blue[200],\n          backgroundColor: blue[200],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Water Leaks\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[200],\n          backgroundColor: green[200],\n          fill: true,\n          tension: 0.5,\n        },\n      ],\n      xAxisLabels: [\"Dent\", \"Bump\", \"Burs\", \"Spatters\", \"Others\"],\n    },\n\n    //TODO Shell Body Sub-line\n    {\n      id: \"shellBodySubLineCDPV\",\n      type: \"bar\",\n      options: { x: { title: { display: true, text: \"Category DPV\" } } },\n      dataSets: [\n        {\n          label: \"Surface\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: red[500],\n          backgroundColor: red[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Body Fitting\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[500],\n          backgroundColor: green[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Missing & Wrong Parts\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          // indexLable:{} ,\n          borderColor: yellow[500],\n          backgroundColor: yellow[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Welding\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: blue[200],\n          backgroundColor: blue[200],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Water Leaks\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[200],\n          backgroundColor: green[200],\n          fill: true,\n          tension: 0.5,\n        },\n      ],\n      xAxisLabels: [\n        \"Surface\",\n        \"Body Fitting\",\n        \"Missing & Wrong Parts\",\n        \"Welding\",\n        \"Water Leaks\",\n      ],\n    },\n\n    {\n      id: \"shellBodySubLineSDPV\",\n      type: \"bar\",\n      options: { x: { title: { display: true, text: \"Category DPV\" } } },\n      dataSets: [\n        {\n          label: \"Surface\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: red[500],\n          backgroundColor: red[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Body Fitting\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[500],\n          backgroundColor: green[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Missing & Wrong Parts\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          // indexLable:{} ,\n          borderColor: yellow[500],\n          backgroundColor: yellow[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Welding\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: blue[200],\n          backgroundColor: blue[200],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Water Leaks\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[200],\n          backgroundColor: green[200],\n          fill: true,\n          tension: 0.5,\n        },\n      ],\n      xAxisLabels: [\"Dent\", \"Bump\", \"Burs\", \"Spatters\", \"Others\"],\n    },\n\n    //TODO Main Body\n    {\n      id: \"mainBodyCDPV\",\n      type: \"bar\",\n      options: { x: { title: { display: true, text: \"Category DPV\" } } },\n      dataSets: [\n        {\n          label: \"Surface\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: red[500],\n          backgroundColor: red[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Body Fitting\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[500],\n          backgroundColor: green[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Missing & Wrong Parts\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          // indexLable:{} ,\n          borderColor: yellow[500],\n          backgroundColor: yellow[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Welding\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: blue[200],\n          backgroundColor: blue[200],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Water Leaks\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[200],\n          backgroundColor: green[200],\n          fill: true,\n          tension: 0.5,\n        },\n      ],\n      xAxisLabels: [\n        \"Surface\",\n        \"Body Fitting\",\n        \"Missing & Wrong Parts\",\n        \"Welding\",\n        \"Water Leaks\",\n      ],\n    },\n\n    {\n      id: \"mainBodySDPV\",\n      type: \"bar\",\n      options: { x: { title: { display: true, text: \"Category DPV\" } } },\n      dataSets: [\n        {\n          label: \"Surface\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: red[500],\n          backgroundColor: red[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Body Fitting\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[500],\n          backgroundColor: green[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Missing & Wrong Parts\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          // indexLable:{} ,\n          borderColor: yellow[500],\n          backgroundColor: yellow[500],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Welding\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: blue[200],\n          backgroundColor: blue[200],\n          fill: true,\n          tension: 0.5,\n        },\n        {\n          label: \"Water Leaks\",\n          data: fakeArrayGenrator({ length: 5, digit: 500 }),\n          borderColor: green[200],\n          backgroundColor: green[200],\n          fill: true,\n          tension: 0.5,\n        },\n      ],\n      xAxisLabels: [\"Dent\", \"Bump\", \"Burs\", \"Spatters\", \"Others\"],\n    },\n\n    //! Test report\n    {\n      id: \"testViewGraph1\",\n      options: {\n        scales: { x: { title: { display: true, text: \"seconds\" } } },\n      },\n      dataSets: [\n        {\n          label: \"Surface\",\n          data: fakeArrayGenrator({ length: 30, digit: 100 }),\n          borderColor: red[500],\n          fill: true,\n          tension: 0.5,\n          pivotRadius: 16,\n        },\n        {\n          label: \"Body Fitting\",\n          data: fakeArrayGenrator({ length: 30, digit: 100 }),\n          borderColor: green[500],\n          fill: true,\n          tension: 0.5,\n          pivotRadius: 16,\n        },\n        {\n          label: \"Missing & Wrong Part\",\n          data: fakeArrayGenrator({ length: 30, digit: 100 }),\n          borderColor: yellow[500],\n          fill: true,\n          tension: 0.5,\n          pivotRadius: 16,\n        },\n        {\n          label: \"Welding\",\n          data: fakeArrayGenrator({ length: 30, digit: 100 }),\n          borderColor: blue[200],\n          fill: true,\n          tension: 0.5,\n          pivotRadius: 16,\n        },\n        {\n          label: \"Water Leaks\",\n          data: fakeArrayGenrator({ length: 30, digit: 100 }),\n          borderColor: green[200],\n          fill: true,\n          tension: 0.5,\n          pivotRadius: 16,\n        },\n      ],\n      xAxisLabels: [\"UB\", \"MB\", \"SB SA\", \"SB ML\", \"SM\"],\n    },\n  ];\n\n  useEffect(() => {\n    if (!fetched) {\n      GraphData.map((item, i) =>\n        lineGraphComponent({\n          id: item.id,\n          type: item.type,\n          dataSets: item.dataSets,\n          xAxisLabels: item.xAxisLabels,\n        })\n      );\n    }\n    setFetched(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetched]);\n  return (\n    <Grid container className={classes.section} spacing={1}>\n      {/* DPV Report */}\n      <Grid item xs={12} sm={7} md={7} className={classes.graphStyle}>\n        <Card component={Paper}>\n          <CardContent>\n            <Typography variant=\"h6\" className={classes.cardTitle} align=\"left\">\n              DPV (Defects Per Vehicle) Report\n            </Typography>\n            <Typography variant=\"body1\" className={classes.cardDetails}>\n              Total Category defects\n            </Typography>\n          </CardContent>\n          <Divider />\n          <CardContent>\n            <canvas\n              id=\"userOverViewGraph\"\n              className={classes.generalGraph}\n            ></canvas>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      {/* DPV by Category  */}\n      <Grid item xs={12} sm={5} md={5}>\n        <Card component={Paper}>\n          <CardContent>\n            <Typography variant=\"h6\" className={classes.cardTitle} align=\"left\">\n              DPV by Category Reports\n            </Typography>\n            <Typography varient=\"body1\" className={classes.cardDetails}>\n              Category DPV\n            </Typography>\n          </CardContent>\n          <Divider />\n          <CardContent>\n            <canvas\n              id=\"deviceOverViewGraph\"\n              className={classes.generalGraph}\n            ></canvas>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      {/* Master Report : Inside this there will multiple div  */}\n      <Grid container className={classes.section} spacing={1}>\n        <Grid item xs={12} sm={6} md={6}>\n          {/* Master Card 1 */}\n          <Card component={Paper}>\n            <CardContent>\n              <Typography\n                variant=\"h6\"\n                className={classes.cardTitle}\n                align=\"left\"\n              >\n                Master Report\n              </Typography>\n              <Typography varient=\"body1\" className={classes.cardDetails}>\n                Under Body Category DPV\n              </Typography>\n            </CardContent>\n            <Divider />\n            <CardContent>\n              <canvas id=\"underBodyCDPV\" className={classes.bigGraph}></canvas>\n            </CardContent>\n          </Card>\n        </Grid>\n        {/* Master Card 2 */}\n        <Grid item xs={12} sm={6} md={6}>\n          <Card component={Paper}>\n            <CardContent>\n              <Typography\n                variant=\"h6\"\n                className={classes.cardTitle}\n                align=\"left\"\n              >\n                Master Report\n              </Typography>\n              <Typography varient=\"body1\" className={classes.cardDetails}>\n                Under Body Surface DPV\n              </Typography>\n            </CardContent>\n            <Divider />\n            <CardContent>\n              <canvas\n                id=\"underBodySurface\"\n                className={classes.bigGraph}\n              ></canvas>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          {/* Master Card 3 */}\n          <Card component={Paper}>\n            <CardContent>\n              <Typography\n                variant=\"h6\"\n                className={classes.cardTitle}\n                align=\"left\"\n              >\n                Master Report\n              </Typography>\n              <Typography varient=\"body1\" className={classes.cardDetails}>\n                Graphs with Categories and Group Wise\n              </Typography>\n            </CardContent>\n            <Divider />\n            <CardContent>\n              <canvas\n                id=\"shellBodySubLineCDPV\"\n                className={classes.bigGraph}\n              ></canvas>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          {/* Master Card 4 */}\n          <Card component={Paper}>\n            <CardContent>\n              <Typography\n                variant=\"h6\"\n                className={classes.cardTitle}\n                align=\"left\"\n              >\n                Master Report\n              </Typography>\n              <Typography varient=\"body1\" className={classes.cardDetails}>\n                Graphs with Categories and Group Wise\n              </Typography>\n            </CardContent>\n            <Divider />\n            <CardContent>\n              <canvas\n                id=\"shellBodySubLineSDPV\"\n                className={classes.bigGraph}\n              ></canvas>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          {/* Master Card 5 */}\n          <Card component={Paper}>\n            <CardContent>\n              <Typography\n                variant=\"h6\"\n                className={classes.cardTitle}\n                align=\"left\"\n              >\n                Master Report\n              </Typography>\n              <Typography varient=\"body1\" className={classes.cardDetails}>\n                Category DPV\n              </Typography>\n            </CardContent>\n            <Divider />\n            <CardContent>\n              <canvas id=\"mainBodyCDPV\" className={classes.bigGraph}></canvas>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          {/* Master Card 6 */}\n          <Card component={Paper}>\n            <CardContent>\n              <Typography\n                variant=\"h6\"\n                className={classes.cardTitle}\n                align=\"left\"\n              >\n                Master Report\n              </Typography>\n              <Typography varient=\"body1\" className={classes.cardDetails}>\n                Surface Category\n              </Typography>\n            </CardContent>\n            <Divider />\n            <CardContent>\n              <canvas id=\"mainBodySDPV\" className={classes.bigGraph}></canvas>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      {/* Parato Report  */}\n      <Grid item xs={12} sm={7} md={8}>\n        <Card component={Paper}>\n          <CardContent>\n            <Typography\n              variant=\"h6\"\n              className={classes.cardTitle}\n              align=\"center\"\n            >\n              Parato Report\n            </Typography>\n          </CardContent>\n          <Divider />\n          <CardContent>\n            <canvas id=\"testViewGraph1\" className={classes.bigGraph}></canvas>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs={12} sm={7} md={4}>\n        <Card component={Paper}>\n          <CardContent className={classes.listStyle}>\n            <Typography\n              variant=\"h6\"\n              className={classes.cardTitle}\n              align=\"center\"\n            >\n              Top 10 Defects Contributors\n            </Typography>\n            <List\n              sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}\n              aria-label=\"contacts\"\n            >\n              <ListItem disablePadding>\n                <ListItemButton>\n                  <ListItemText align=\"center\" primary=\"No. 1 Contributor\" />\n                </ListItemButton>\n              </ListItem>\n              <ListItem disablePadding>\n                <ListItemButton>\n                  <ListItemText align=\"center\" primary=\"No. 2 Contributor\" />\n                </ListItemButton>\n              </ListItem>\n              <ListItem disablePadding>\n                <ListItemButton>\n                  <ListItemText align=\"center\" primary=\"No. 3 Contributor\" />\n                </ListItemButton>\n              </ListItem>\n              <ListItem disablePadding>\n                <ListItemButton>\n                  <ListItemText align=\"center\" primary=\"No. 4 Contributor\" />\n                </ListItemButton>\n              </ListItem>\n              <ListItem disablePadding>\n                <ListItemButton>\n                  <ListItemText align=\"center\" primary=\"No. 6 Contributor\" />\n                </ListItemButton>\n              </ListItem>\n              <ListItem disablePadding>\n                <ListItemButton>\n                  <ListItemText align=\"center\" primary=\"No. 7 Contributor\" />\n                </ListItemButton>\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Chart, registerables } from \"chart.js\";\n\nexport function lineGraphComponent({ id, type, dataSets, xAxisLabels }) {\n  var ctx = document.getElementById(id).getContext(\"2d\");\n\n  Chart.register(...registerables);\n  var myChart = new Chart(ctx, {\n    type: type ? type : \"line\",\n    data: {\n      labels: xAxisLabels,\n      datasets: dataSets,\n    },\n    options: {\n      scales: {\n        x: {\n          display: type === \"pie\" ? false : true,\n          grid: {\n            color: \"transparent\",\n          },\n          stacked: true\n        },\n\n        y: {\n          display: type === \"pie\" ? false : true,\n          grid: {\n            color: \"transparent\",\n          },\n          stacked: true\n        },\n      },\n      plugins: {\n        legend: { position: \"right\" },\n        labels: {\n          render: 'value',\n          fontColor: ['green', 'white', 'red']\n        }\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n    },\n  });\n  return myChart;\n}\n","import { Grid, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"../Components/BodyComponent/BodyStyles\";\n\nexport const PageHeader = ({ label, title }) => {\n  const classes = useStyles();\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography variant='button' className={classes.pageLabel}>\n          {label}\n        </Typography>\n        <Typography variant='h5' component='h2' className={classes.pageHeader}>\n          {title}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport { useStyles } from \"../BodyStyles\";\nimport BlogGraph from \"./WholeGraph\";\nimport { PageHeader } from \"../../../Common/Components\";\nimport { jsPDF } from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  const DisplayData = [\n    {\n      label: \"Total DPV\",\n      value: \"6.86\",\n    },\n    {\n      label: \"Surface DPV\",\n      value: \"4.57\",\n    },\n    {\n      label: \"Total No. of Vehicals\",\n      value: \"213\",\n    },\n    {\n      label: \"Total No. of defects\",\n      value: \"192\",\n    },\n  ];\n\n  //! With PDFjs API\n  function generatePDF(event) {\n    const input = document.getElementById(\"pdf\");\n\n    console.log(event);\n\n    html2canvas(input, {\n      logging: true,\n      letterRendering: 1,\n      scale: 2,\n      windowWidth: event.view.screen.availWidth,\n      useCORS: true,\n    }).then((canvas) => {\n      var imgData = canvas.toDataURL(\"image/png\");\n      var imgWidth = 210;\n      var pageHeight = 295;\n      var imgHeight = (canvas.height * imgWidth) / canvas.width;\n      var heightLeft = imgHeight;\n      var doc = new jsPDF(\"p\", \"mm\");\n      var position = 0;\n      doc.addImage(imgData, \"jpeg\", 0, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n      while (heightLeft >= 0) {\n        position = heightLeft - imgHeight;\n        doc.addPage();\n        doc.addImage(imgData, \"jpeg\", 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n      }\n\n      doc.save(\"dashboard.pdf\");\n      console.log(\"Pdf generated\");\n    });\n  }\n\n  return (\n    <Box mt={2} className={classes.wholePage}>\n      {/* //title section  */}\n\n      <Grid style={{display: 'float'}}>\n        <PageHeader\n          label=\"Vehical Inspection\"\n          title=\"Dashboard\"\n          className={classes.pageHeader}\n        />\n        <Box style={{float: 'right', flexDirection: 'row'}}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.buttonStyle}\n            onClick={() => window.print()}\n          >\n            Ctrl + P\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.buttonStyle}\n            onClick={generatePDF}\n          >\n            With framework\n          </Button>\n        </Box>\n      </Grid>\n\n      <Grid container spacing={1} className={classes.section}>\n        {DisplayData.map((item, i) => (\n          <Grid key={i} item xs={6} sm={3} md={3}>\n            <Card className={classes.dashboardCardsStyles}>\n              <CardContent className={classes.displayCard}>\n                <Box className={classes.cardDataContent}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.cardLabel}\n                    gutterBottom={true}\n                  >\n                    {item.label}\n                  </Typography>\n                  <Typography\n                    variant=\"h4\"\n                    component=\"h2\"\n                    className={classes.cardHeader}\n                  >\n                    {item.value}\n                  </Typography>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* section blog graph  */}\n      <BlogGraph className={classes.graphStyle} />\n      {/* <Section3 />z */}\n    </Box>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useStyles } from \"./HeaderStyle\";\nimport NavbarComponent from \"./NavbarComponent\";\n// import Sidenav from \"./Sidenav\";\n// import Notification from \"./ActionTab/Notification\";\n// import BlogPost from \"../BodyComponent/BlogPost\";\nimport Dashboard from \"../BodyComponent/Dashboard/Dashboard\";\n// import Link1 from \"../BodyComponent/Link1\";\n\nexport default function HearderComponent() {\n  const classes = useStyles();\n  return (\n    <div id=\"pdf\" >\n      <Fragment>\n      <NavbarComponent />\n      <Box className={classes.section}>\n        <Switch>\n          <Route exact path='/' render={() => <Dashboard />} />\n        </Switch>\n      </Box>\n    </Fragment>\n    </div>\n  );\n}\n","import { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport HearderComponent from \"./Components/Header/HearderComponent\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <HearderComponent />;\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.createRoot(rootElement).render(<App />);\n// console.log(\"ReactDOM\", ReactDOM);\n"],"sourceRoot":""}